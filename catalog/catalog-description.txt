# Firebird databases have no schemas (or phrased differently, the database is a single unnamed schema).
# A connection is to a single database only, and it is not possible to discover other databases.

# Syntax derived from https://www.jetbrains.com/datagrip/new_dbms/

# Include things like FILTER, CHARACTER SET, COLLATION, database privileges?
Database ::== Table * | View * | StoredProcedure * | Function * | Package * | Domain * | Sequence * | Role * | DatabaseTrigger * | Exception * | User *

# General questions re metadata
# - Include privileges?
# - Include owner?

# Group key, foreign key and check under constraint?
# Handling for external tables? Handling for system tables? List system tables separately, or is TableType sufficient?
# TODO Include external file
Table ::== TableName | TableType | Comments | TableColumn * | Index * | Key * | ForeignKey * | Check * | TableTrigger * 

# NOTE: CharLength should only be used for CHAR/VARCHAR, for other types it has the byte length of the field
TableColumn ::== TableName | ColumnName | DomainName | SqlTypeName | NumericPrecision | NumericScale | CharLength | CharacterSetName | CollationName | ColumnDefaultSource | IsComputed | ComputedSource | IsNotNull | FieldPosition | IsIdentity | IdentityType | Comments

# Current query excludes indices backing constraints
Index ::== IndexName | TableName | IsUnique | Direction | IsExpressionIndex | ExpressionSource | IsActive | Comments | IndexColumn*

# Position is only relevant for order in index definition
IndexColumn ::== IndexName | ColumnName | ColumnPosition

# TODO Exclude other trigger types from selection
TableTrigger ::== TriggerName | TableName | IsActive | Phase | MutationTypes | Position | TableName | TriggerSource

View ::== ViewName | ViewSource | Comment | ViewColumn * | ViewTrigger * 

# There is no difference with table triggers
ViewTrigger ::== TriggerName | TableName | IsActive | Phase | MutationTypes | Position | TableName | TriggerSource

# Subset of TableColumn (can be retrieved using the same query)
# NOTE: CharLength should only be used for CHAR/VARCHAR, for other types it has the byte length of the field
ViewColumn ::== TableName | ColumnName | DomainName | SqlTypeName | NumericPrecision | NumericScale | CharLength | CharacterSetName | CollationName | IsNotNull | FieldPosition | Comments

# TODO Unify Parameter and ReturnColumn?
# NOTE: PackageName is null for normal procedures
# NOTE: EntryPoint is null for PSQL procedures
# NOTE: EngineName is null for PSQL functions
StoredProcedure ::== ProcedureName | PackageName | ProcedureType | ProcedureKind | EntryPoint | EngineName | ProcedureSource | Comment | ProcedureParameter * | ProcedureReturnColumn * 

# TODO: List domain name if applicable?
# TODO: TYPE OF COLUMN names
# TODO: Is IsNotNull relevant for parameters?
# NOTE: CharLength should only be used for CHAR/VARCHAR, for other types it has the byte length of the field
# NOTE: PackageName is null for normal procedures
ProcedureParameter ::== ProcedureName | PackageName | ParameterName | SqlTypeName | NumericPrecision | NumericScale | CharLength | CharacterSetName | ColumnDefaultSource | IsNotNull | ParameterNumber | Comments

# TODO: List domain name if applicable?
# TODO: TYPE OF COLUMN names
# TODO: Is IsNotNull relevant for return columns?
# NOTE: CharLength should only be used for CHAR/VARCHAR, for other types it has the byte length of the field
# NOTE: PackageName is null for normal procedures
ProcedureReturnColumn ::== ProcedureName | PackageName | ReturnColumnName | SqlTypeName | NumericPrecision | NumericScale | CharLength | CharacterSetName | ColumnDefaultSource | IsNotNull | ParameterNumber | Comments

# Only user-defined functions (native UDF, UDR and PSQL functions)
# NOTE: ModuleName is null for UDR and PSQL functions
# NOTE: EntryPoint is null for PSQL functions
# NOTE: EngineName is null for UDF and PSQL functions
# NOTE: ReturnCharLength should only be used for CHAR/VARCHAR, for other types it has the byte length of the field
# NOTE: PackageName is null for normal functions
Function ::== FunctionName | PackageName | FunctionKind | ModuleName | EntryPoint | EngineName | ReturnSqlTypeName | ReturnNumericPrecision | ReturnNumericScale | ReturnCharLength | ReturnCharacterSetName | FunctionSource | FunctionParameter * 

# TODO: List domain name if applicable?
# TODO: TYPE OF COLUMN names
# NOTE: For native UDFs, the ParameterName is NULL
# NOTE: CharLength should only be used for CHAR/VARCHAR, for other types it has the byte length of the field
# NOTE: PackageName is null for normal functions
FunctionParameter ::== FunctionName | PackageName | ParameterName | SqlTypeName | NumericPrecision | NumericScale | CharLength | CharacterSetName | ParameterNumber

# Firebird 3+ feature packages
Package ::== Name | PackageHeaderSource | PackageBodySource | Comments

Domain ::== DomainName | SqlTypeName | NumericPrecision | NumericScale | CharLength | CharacterSetName | CollationName | ColumnDefaultSource | DomainCheckConstraintSource | IsNotNull | Comments

Sequence ::== SequenceName | Comments

Role ::== Name | Comments

DatabaseTrigger ::== TODO

Exception ::== Name | Message | Comments

# Visibility of users other than the connected user may be restricted if the user is not SYSDBA or is not connected with the RDB$ADMIN role
# Not selectable in Firebird 2.5 and earlier
User ::== Name | TODO